// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides code completion suggestions based on the context of HTML, CSS, or JavaScript code.
 *
 * - codeCompletion - A function that provides code completion suggestions.
 * - CodeCompletionInput - The input type for the codeCompletion function.
 * - CodeCompletionOutput - The return type for the codeCompletion function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CodeCompletionInputSchema = z.object({
  code: z.string().describe('The current code in the editor.'),
  language: z.enum(['html', 'css', 'javascript']).describe('The language of the code.'),
  cursorPosition: z.number().describe('The current cursor position in the code.'),
});
export type CodeCompletionInput = z.infer<typeof CodeCompletionInputSchema>;

const CodeCompletionOutputSchema = z.object({
  suggestions: z.array(z.string()).describe('An array of code completion suggestions.'),
});
export type CodeCompletionOutput = z.infer<typeof CodeCompletionOutputSchema>;

export async function codeCompletion(input: CodeCompletionInput): Promise<CodeCompletionOutput> {
  return codeCompletionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'codeCompletionPrompt',
  input: {schema: CodeCompletionInputSchema},
  output: {schema: CodeCompletionOutputSchema},
  prompt: `You are an AI code completion tool. Given the following code snippet, language, and cursor position, provide code completion suggestions.

Language: {{{language}}}
Code:
{{#if code}}
  {{{code}}}
{{else}}
  // Code editor is empty. Provide basic suggestions for the specified language.
{{/if}}
Cursor Position: {{{cursorPosition}}}

Provide only code suggestions that would make sense given the context, and nothing else. Return a JSON array of strings.`,
});

const codeCompletionFlow = ai.defineFlow(
  {
    name: 'codeCompletionFlow',
    inputSchema: CodeCompletionInputSchema,
    outputSchema: CodeCompletionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
